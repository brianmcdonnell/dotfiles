# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
    else
    color_prompt=
    fi
fi



xGREEN=$'\e[0;32m'
xLIME=$'\e[1;32m'
xORANGE=$'\e[0;33m'
xYELLOW=$'\e[1;33m'
xBLUE=$'\e[0;34m'
xCYAN=$'\e[1;34m'
xPURPLE=$'\e[0;35m'
xCLR=$'\e[00m'



yGREEN="\[\033[0;32m\]"
yLIME="\[\033[1;32m\]"
yORANGE="\[\033[0;33m\]"
yYELLOW="\[\033[1;33m\]"
yBLUE="\[\033[0;34m\]"
yCYAN="\[\033[1;34m\]"
yPURPLE="\[\033[0;35m\]"
yCLR="\[\033[00m\]"


# Set git autocompletion and PS1 integration
#if [ -f /usr/local/git/contrib/completion/git-completion.bash ]; then
#  . /usr/local/git/contrib/completion/git-completion.bash
#fi
GIT_PS1_SHOWDIRTYSTATE=true

function parse_git_branch {
  ref=$(git-symbolic-ref HEAD 2> /dev/null) || return
  echo "("${ref#refs/heads/}")"
}

hg_ps1() {
    #hg prompt "{${xCLR}${xORANGE}hg:{branch}}{${xCLR}|${xORANGE}{bookmark}}{${xYELLOW}[{status}]}" 2> /dev/null
    # These will be interpreted by python as ansi color codes.  Therefore they need to conform to python standards.
    local PY_GREEN=$'\033[0;32m'
    local PY_LIME=$'\033[1;32m'
    local PY_ORANGE=$'\033[0;33m'
    local PY_YELLOW=$'\033[1;33m'
    local PY_BLUE=$'\033[0;34m'
    local PY_CYAN=$'\033[1;34m'
    local PY_PURPLE=$'\033[0;35m'
    local PY_CLR=$'\033[00m'
    hg prompt "{${PY_CLR}${PY_ORANGE}hg:{branch}}{${PY_CLR}|${PY_ORANGE}{bookmark}}{${PY_YELLOW}[{status}]}" 2> /dev/null
}

git_ps1() {
    echo -n "${yORANGE}"'$(__git_ps1 "git:%s")'"${yCLR}"
}

if [ "$color_prompt" = yes ]; then
    # Default colour prompt
    # PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    # PS1='${debian_chroot:+($debian_chroot)}\[\033[01;34m\]\u@\h:\[\033[01;32m\]\w $(parse_git_branch)\[\033[00m\]\$ '

    # New colours
    PS1="\n${yBLUE}\u@\h ${yCYAN}\w $(git_ps1)"'$(hg_ps1)'"\n${yCLR}$ ${yCLR}"

else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w \$ '
fi
unset color_prompt force_color_prompt




